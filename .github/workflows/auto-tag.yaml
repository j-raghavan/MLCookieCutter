name: Auto Increment Version Tag

on:
  push:
    branches:
      - master  # Trigger only on merges to master

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Get the latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          latest_tag_without_v=${latest_tag#v}
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
          echo "latest_tag_without_v=$latest_tag_without_v" >> $GITHUB_ENV

      - name: Determine Version Increment
        id: determine_increment
        run: |
          increment_type="patch"
          commit_message=$(git log -1 --pretty=%B)

          if [[ "$commit_message" == *"BREAKING CHANGE:"* ]]; then
            increment_type="major"
          elif [[ "$commit_message" == *"feat:"* ]]; then
            increment_type="minor"
          elif [[ "$commit_message" == *"fix:"* ]]; then
            increment_type="patch"
          fi

          echo "increment_type=$increment_type" >> $GITHUB_ENV

      - name: Increment the Version
        id: increment_version
        run: |
          IFS='.' read -r major minor patch <<< "$latest_tag_without_v"

          case "$increment_type" in
            major) major=$((major + 1)); minor=0; patch=0 ;;
            minor) minor=$((minor + 1)); patch=0 ;;
            patch) patch=$((patch + 1)) ;;
          esac

          new_tag="v${major}.${minor}.${patch}"
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Check if Tag Already Exists
        id: check_tag_exists
        run: |
          if git rev-parse "$new_tag" >/dev/null 2>&1; then
            echo "Tag $new_tag already exists. Skipping..."
            echo "tag_exists=true" >> $GITHUB_ENV
          else
            echo "tag_exists=false" >> $GITHUB_ENV
          fi

      - name: Push the New Tag
        if: env.tag_exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git tag "$new_tag"
          git push origin "$new_tag"